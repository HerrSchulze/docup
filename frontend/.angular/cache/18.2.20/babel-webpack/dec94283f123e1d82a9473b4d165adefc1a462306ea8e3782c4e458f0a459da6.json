{"ast":null,"code":"import _asyncToGenerator from \"/home/i01033/docup/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nexport let OcrService = /*#__PURE__*/(() => {\n  class OcrService {\n    constructor() {}\n    /**\n     * OCR is now handled by the backend service.\n     * This service is kept for potential future frontend-only OCR features.\n     */\n    extractTextFromImage(file) {\n      return _asyncToGenerator(function* () {\n        // Return empty result since OCR is handled by backend\n        return {\n          text: '',\n          confidence: 0,\n          processingTime: 0\n        };\n      })();\n    }\n    /**\n     * Extract text from PDF (handled by backend)\n     */\n    extractTextFromPdf(file) {\n      return _asyncToGenerator(function* () {\n        // Return empty result since OCR is handled by backend\n        return {\n          text: '',\n          confidence: 0,\n          processingTime: 0\n        };\n      })();\n    }\n    /**\n     * Check if file type is supported for OCR\n     */\n    isOcrSupported(fileType) {\n      const supportedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'];\n      return supportedTypes.includes(fileType);\n    }\n    /**\n     * Get estimated processing time based on file size\n     */\n    getEstimatedProcessingTime(fileSize) {\n      // Rough estimate: 1MB = 5 seconds processing time\n      return Math.max(fileSize / (1024 * 1024) * 5, 2);\n    }\n    static {\n      this.ɵfac = function OcrService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || OcrService)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: OcrService,\n        factory: OcrService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OcrService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}